{"version":3,"file":"static/js/903.2f8d2c4a.chunk.js","mappings":"uIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C,wJClCMC,EAAW,+BACXC,EAAU,4CAET,SAAeC,IAAtB,4CAAO,OAAP,cAAO,oGACcC,MAAM,GAAD,OAAIH,EAAJ,8BAAkCC,IADrD,UAEe,OADdhB,EADD,QAEImB,OAFJ,yCAGInB,GAHJ,kEAOA,SAAeoB,EAAtB,+CAAO,OAAP,cAAO,WAA8BC,GAA9B,uFACcH,MAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAQC,QAA9B,OAAuCN,IAD1D,UAEe,OADdhB,EADD,QAEImB,OAFJ,yCAGInB,GAHJ,kEAOA,SAAeuB,EAAtB,+CAAO,OAAP,cAAO,WAAiCF,GAAjC,uFACcH,MAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAQC,OAA9B,mBAA+CN,EAA/C,2BADnB,UAEe,OADdhB,EADD,QAEImB,OAFJ,yCAGInB,GAHJ,kEAOA,SAAewB,EAAtB,+CAAO,OAAP,cAAO,WAA8BH,GAA9B,uFACcH,MAAM,GAAD,OAAIH,EAAJ,kBAAsBM,EAAQC,OAA9B,mBAA+CN,EAA/C,2BADnB,UAEe,OADdhB,EADD,QAEImB,OAFJ,yCAGInB,GAHJ,kEAOA,SAAeyB,EAAtB,+CAAO,OAAP,cAAO,WAAgCC,GAAhC,uFACcR,MAAM,GAAD,OAAIH,EAAJ,wBAA4BC,EAA5B,kBAA6CU,IADhE,UAEe,OADd1B,EADD,QAEImB,OAFJ,yCAGInB,GAHJ,kE,gHC9BP,EAA0B,6BAA1B,EAAoE,gCAApE,EAAmH,kCAAnH,EAAqK,mCAArK,EAAqN,gC,SCsCrN,EAlCoB,WAChB,OAAkC2B,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACMR,GAAUS,EAAAA,EAAAA,MAQhB,OANAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAkBF,GACfhB,MAAK,SAAA2B,GAAI,OAAIA,EAAKC,MAAT,IACT5B,MAAK,SAAA6B,GAAO,OAAIL,EAAaK,EAAQC,QAAzB,GAChB,GAAE,CAACd,KAGF,gBAAKe,UAAWC,EAAhB,SACqC,IAAlCC,OAAOC,KAAKX,GAAWY,OAC7BZ,EAAUa,KAAI,SAAAC,GACd,OACC,iBAAKN,UAAWC,EAAhB,WACA,eAAID,UAAWC,EAAf,SAAkCK,EAAWC,UAC7C,cAAGP,UAAWC,EAAd,SAAkCK,EAAWE,WAC7C,cAAGR,UAAWC,EAAd,SAA+BK,EAAWG,eAHLH,EAAWI,GAMhD,KACA,0BACA,oDASH,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/fetchMovies.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieInformation/MovieReview/MovieReview.module.css?2316","components/MovieDetails/MovieInformation/MovieReview/MovieReview.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '?api_key=4761bb7849595ee4cbf0e7a5e7d7ab74';\n\nexport async function fetchMovies() {\n  const info = await fetch(`${BASE_URL}/trending/movie/day${API_KEY}`);\n  if (info.status === 200) {\n    return info;\n  }\n}\n\nexport async function fetchNewsMovie(idMovie) {\n  const info = await fetch(`${BASE_URL}/movie/${idMovie.postId}${API_KEY}`);\n  if (info.status === 200) {\n    return info;\n  }\n}\n\nexport async function fetchMovieReviews(idMovie) {\n  const info = await fetch(`${BASE_URL}/movie/${idMovie.postId}/reviews${API_KEY}&language=en-US&page=1`);\n  if (info.status === 200) {\n    return info;\n  }\n}\n\nexport async function fetchMovieCast(idMovie) {\n  const info = await fetch(`${BASE_URL}/movie/${idMovie.postId}/credits${API_KEY}&language=en-US&page=1`);\n  if (info.status === 200) {\n    return info;\n  }\n}\n\nexport async function fetchSearchMovie(search) {\n  const info = await fetch(`${BASE_URL}/search/movie${API_KEY}&query=${search}`);\n  if (info.status === 200) {\n    return info;\n  }\n}","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"MovieReview_reviews__hM86F\",\"reviewItem\":\"MovieReview_reviewItem__1Z2FZ\",\"reviewAuthor\":\"MovieReview_reviewAuthor__TK5F5\",\"reviewContent\":\"MovieReview_reviewContent__2WXI3\",\"reviewDate\":\"MovieReview_reviewDate__5NpRs\",\"reviewH2\":\"MovieReview_reviewH2__iP-Jy\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'api/fetchMovies';\nimport css from './MovieReview.module.css'\n\nconst MovieReview = () => {\n    const [fetchData, setFetchData] = useState({});\n    const idMovie = useParams();\n  \n    useEffect(() => {\n      fetchMovieReviews(idMovie)\n        .then(data => data.json())\n        .then(reviews => setFetchData(reviews.results));\n    }, [idMovie]);\n\n    return (\n      <div className={css.reviews}>\n        {Object.keys(fetchData).length !== 0 ? (\n\t\t\tfetchData.map(reviewItem => {\n\t\t\treturn (\n\t\t\t\t<div className={css.reviewItem} key={reviewItem.id}>\n\t\t\t\t<h3 className={css.reviewAuthor}>{reviewItem.author}</h3>\n\t\t\t\t<p className={css.reviewContent}>{reviewItem.content}</p>\n\t\t\t\t<p className={css.reviewDate}>{reviewItem.updated_at}</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t\t}) ) : (\n\t\t\t\t<div>\n\t\t\t\t<h2>No information found</h2>\n\t\t\t</div>\n\t\t\t)\n\t\t\n\n\t\t  \n\t\t  }\n      </div>\n    );\n}\n\nexport default MovieReview"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","API_KEY","fetchMovies","fetch","status","fetchNewsMovie","idMovie","postId","fetchMovieReviews","fetchMovieCast","fetchSearchMovie","search","useState","fetchData","setFetchData","useParams","useEffect","data","json","reviews","results","className","css","Object","keys","length","map","reviewItem","author","content","updated_at","id"],"sourceRoot":""}